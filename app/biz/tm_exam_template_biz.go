// Code generated by gen.go. DO NOT EDIT.
// ⚠️ 本文件为业务层模板，禁止直接修改任何生成器生成的文件！
// 如需调整，请修改本模板，并通过 go run utils/gen/gen.go -table=表名 -cmd=b 等命令重新生成覆盖。

package biz

import (
	"gin-go-test/app/models"
	"gin-go-test/app/services"
)

// TmExamTemplateBiz 处理tm_exam_template相关的业务逻辑
type TmExamTemplateBiz struct {
	service *services.TmExamTemplateService
}

// NewTmExamTemplateBiz 创建新的TmExamTemplateBiz实例
func NewTmExamTemplateBiz(service *services.TmExamTemplateService) *TmExamTemplateBiz {
	return &TmExamTemplateBiz{service: service}
}

// GetCount 获取记录总数
func (b *TmExamTemplateBiz) GetCount() (int64, error) {
	return b.service.GetCount()
}

// List 获取记录列表
func (b *TmExamTemplateBiz) List(page, pageSize int) ([]models.TmExamTemplate, []error) {
	result, err := b.service.List(page, pageSize)
	if err != nil {
		return nil, []error{err}
	}
	return result, nil
}

// BatchCreate 批量创建记录
func (b *TmExamTemplateBiz) BatchCreate(items []*models.TmExamTemplate) ([]models.TmExamTemplate, []error) {
	// 将 []*models.TmExamTemplate 转换为 []models.TmExamTemplate
	modelItems := make([]models.TmExamTemplate, len(items))
	for i, item := range items {
		modelItems[i] = *item
	}
	return b.service.BatchCreate(modelItems)
}

// BatchUpdate 批量更新记录
func (b *TmExamTemplateBiz) BatchUpdate(items []*models.TmExamTemplate) ([]models.TmExamTemplate, []error) {
	modelItems := make([]models.TmExamTemplate, len(items))
	for i, item := range items {
		modelItems[i] = *item
	}
	return b.service.BatchUpdate(modelItems)
}

// BatchDelete 批量删除记录
func (b *TmExamTemplateBiz) BatchDelete(ids []int) []error {
	// 将 []int 转换为 []uint
	uintIds := make([]uint, len(ids))
	for i, id := range ids {
		uintIds[i] = uint(id)
	}
	return b.service.BatchDelete(uintIds)
}

func (b *TmExamTemplateBiz) GetDetail(id string) (*models.TmExamTemplate, error) {
	return b.service.GetDetail(id)
}

func (b *TmExamTemplateBiz) ListWithOrder(page, pageSize int, sort, order string) ([]*models.TmExamTemplate, []error) {
	return b.service.ListWithOrder(page, pageSize, sort, order)
}