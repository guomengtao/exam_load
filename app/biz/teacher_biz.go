// Code generated by gen.go. DO NOT EDIT.
package biz

import (
	"gin-go-test/app/models"
	"gin-go-test/app/services"
)

// TeacherBiz 处理teacher相关的业务逻辑
type TeacherBiz struct {
	service *services.TeacherService
}

// NewTeacherBiz 创建新的TeacherBiz实例
func NewTeacherBiz(service *services.TeacherService) *TeacherBiz {
	return &TeacherBiz{service: service}
}

// GetCount 获取记录总数
func (b *TeacherBiz) GetCount() (int64, error) {
	return b.service.GetCount()
}

// List 获取记录列表
func (b *TeacherBiz) List(page, pageSize int) ([]models.Teacher, error) {
	return b.service.List(page, pageSize)
}

// BatchCreate 批量创建记录
func (b *TeacherBiz) BatchCreate(items []*models.Teacher) ([]models.Teacher, []error) {
	// 将 []*models.Teacher 转换为 []models.Teacher
	modelItems := make([]models.Teacher, len(items))
	for i, item := range items {
		modelItems[i] = *item
	}
	return b.service.BatchCreate(modelItems)
}

// BatchUpdate 批量更新记录
func (b *TeacherBiz) BatchUpdate(items []*models.Teacher) ([]models.Teacher, []error) {
	// 将 []*models.Teacher 转换为 []models.Teacher
	modelItems := make([]models.Teacher, len(items))
	for i, item := range items {
		modelItems[i] = *item
	}
	return b.service.BatchUpdate(modelItems)
}

// BatchDelete 批量删除记录
func (b *TeacherBiz) BatchDelete(ids []int) []error {
	// 将 []int 转换为 []uint
	uintIds := make([]uint, len(ids))
	for i, id := range ids {
		uintIds[i] = uint(id)
	}
	return b.service.BatchDelete(uintIds)
}
