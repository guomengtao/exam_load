// Code generated by gen.go. DO NOT EDIT.
package biz

import (
	"gin-go-test/app/models"
	"gin-go-test/app/services"
)

// RoleBiz 处理role相关的业务逻辑
type RoleBiz struct {
	service *services.RoleService
}

// NewRoleBiz 创建新的RoleBiz实例
func NewRoleBiz(service *services.RoleService) *RoleBiz {
	return &RoleBiz{service: service}
}

// GetCount 获取记录总数
func (b *RoleBiz) GetCount() (int64, error) {
	return b.service.GetCount()
}

// List 获取记录列表
func (b *RoleBiz) List(page, pageSize int) ([]models.Role, error) {
	return b.service.List(page, pageSize)
}

// BatchCreate 批量创建记录
func (b *RoleBiz) BatchCreate(items []*models.Role) ([]models.Role, []error) {
	// 将 []*models.Role 转换为 []models.Role
	modelItems := make([]models.Role, len(items))
	for i, item := range items {
		modelItems[i] = *item
	}
	return b.service.BatchCreate(modelItems)
}

// BatchUpdate 批量更新记录
func (b *RoleBiz) BatchUpdate(items []*models.Role) ([]models.Role, []error) {
	// 将 []*models.Role 转换为 []models.Role
	modelItems := make([]models.Role, len(items))
	for i, item := range items {
		modelItems[i] = *item
	}
	return b.service.BatchUpdate(modelItems)
}

// BatchDelete 批量删除记录
func (b *RoleBiz) BatchDelete(ids []int) []error {
	// 将 []int 转换为 []uint
	uintIds := make([]uint, len(ids))
	for i, id := range ids {
		uintIds[i] = uint(id)
	}
	return b.service.BatchDelete(uintIds)
}