// Code generated by gen.go. DO NOT EDIT.
package controllers

import (
	"gin-go-test/app/biz"
	"gin-go-test/app/models"
	"gin-go-test/app/services"
	"gin-go-test/utils"
	"gin-go-test/utils/generated/controller"
	"github.com/gin-gonic/gin"
	"gorm.io/gorm"
)

// RegisterBadmintonGameRoutes 注册 BadmintonGame 相关路由
func RegisterBadmintonGameRoutes(router *gin.Engine, db *gorm.DB) {
	group := router.Group("/api/badminton_game")
	skeleton := controller.NewBadmintonGameSkeleton(biz.NewBadmintonGameBiz(services.NewBadmintonGameService(db)))
	group.GET("/count", skeleton.CountHandler)
	group.GET("/list", skeleton.ListHandler)
	group.POST("", skeleton.BatchCreateHandler)
	group.PUT("", skeleton.BatchUpdateHandler)
	group.DELETE("", skeleton.BatchDeleteHandler)
}

// BatchUpdate 批量更新记录
func BatchUpdate(ctx *gin.Context) {
	var items []models.BadmintonGame
	if err := ctx.ShouldBindJSON(&items); err != nil {
		utils.Error(ctx, err.Error())
		return
	}

	service := services.NewBadmintonGameService(ctx.MustGet("db").(*gorm.DB))
	if err := service.BatchUpdate(items); err != nil {
		utils.Error(ctx, err.Error())
		return
	}
	utils.Success(ctx, nil)
}
