// Code generated by gen.go. DO NOT EDIT.
// ⚠️ 本文件为骨架模板，禁止直接修改任何生成器生成的文件！
// 如需调整，请修改本模板，并通过 go run utils/gen/gen.go -table=表名 -cmd=b 等命令重新生成覆盖。

package biz

import (
	"gin-go-test/app/models"
	"gin-go-test/app/services"
)

// roleBiz 处理role相关的业务逻辑
type roleBiz struct {
	service *services.RoleService
}

// NewroleBiz 创建新的roleBiz实例
func NewroleBiz(service *services.RoleService) *roleBiz {
	return &roleBiz{service: service}
}

// GetCount 获取记录总数
func (b *roleBiz) GetCount() (int64, error) {
	return b.service.GetCount()
}

// List 获取记录列表
func (b *roleBiz) List(page, pageSize int) ([]models.Role, error) {
	return b.service.List(page, pageSize)
}

// BatchCreate 批量创建记录
func (b *roleBiz) BatchCreate(items []*models.Role) ([]models.Role, error) {
	// 将 []*models.Role 转换为 []models.Role
	modelItems := make([]models.Role, len(items))
	for i, item := range items {
		modelItems[i] = *item
	}
	// Assuming service.BatchCreate now returns ([]models.Role, error)
	createdItems, err := b.service.BatchCreate(modelItems)
	if err != nil {
		return nil, err
	}
	return createdItems, nil
}

// BatchUpdate 批量更新记录
func (b *roleBiz) BatchUpdate(items []*models.Role) error {
	// 将 []*models.Role 转换为 []models.Role
	modelItems := make([]models.Role, len(items))
	for i, item := range items {
		modelItems[i] = *item
	}
	return b.service.BatchUpdate(modelItems)
}

// BatchDelete 批量删除记录
func (b *roleBiz) BatchDelete(ids []int) error {
	// 将 []int 转换为 []uint
	uintIds := make([]uint, len(ids))
	for i, id := range ids {
		uintIds[i] = uint(id)
	}
	// Assuming service.BatchDelete now returns error
	err := b.service.BatchDelete(uintIds)
	return err
}

// GetDetail 获取记录详情
func (b *roleBiz) GetDetail(id string) (*models.Role, error) {
	return b.service.GetDetail(id)
}

// ListWithOrder 获取记录列表（带排序）
func (b *roleBiz) ListWithOrder(page, pageSize int, sort, order string) ([]*models.Role, error) {
	return b.service.ListWithOrder(page, pageSize, sort, order)
}